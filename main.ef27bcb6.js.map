{"version":3,"sources":["scripts/main.js"],"names":["listNode","document","querySelector","employees","children","sortList","list","sort","a","b","aSalary","convertToNumber","getAttribute","bSalary","string","glued","replaceAll","Number","slice","getEmployees","map","person","name","innerText","position","salary","age","append"],"mappings":";AAAA,aA8BC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA5BD,IAAMA,EAAWC,SAASC,cAAc,MAClCC,EAAYH,EAASI,SAK3B,SAASC,EAASC,GACT,OAAA,EAAIA,GAAMC,KAAK,SAACC,EAAGC,GAClBC,IAAAA,EAAUC,EAAgBH,EAAEI,aAAa,gBAGxCC,OAFSF,EAAgBF,EAAEG,aAAa,gBAE9BF,IAIrB,SAASC,EAAgBG,GACjBC,IAAAA,EAAQD,EAAOE,WAAW,IAAK,IAE9BC,OAAAA,OAAOF,EAAMG,MAAM,IAG5B,SAASC,EAAab,GACb,OAAA,EAAIA,GAAMc,IAAI,SAACC,GAAY,MAAA,CAChCC,KAAMD,EAAOE,UACbC,SAAUH,EAAOT,aAAa,iBAC9Ba,OAAQJ,EAAOT,aAAa,eAC5Bc,IAAKL,EAAOT,aAAa,eAvB7BZ,EAAS2B,OAAT3B,MAAAA,EAAmBK,EAAAA,EAASF,KAC5BgB,EAAahB","file":"main.ef27bcb6.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst listNode = document.querySelector('ul');\nconst employees = listNode.children;\n\nlistNode.append(...sortList(employees));\ngetEmployees(employees);\n\nfunction sortList(list) {\n  return [...list].sort((a, b) => {\n    const aSalary = convertToNumber(a.getAttribute('data-salary'));\n    const bSalary = convertToNumber(b.getAttribute('data-salary'));\n\n    return bSalary - aSalary;\n  });\n};\n\nfunction convertToNumber(string) {\n  const glued = string.replaceAll(',', '');\n\n  return Number(glued.slice(1));\n};\n\nfunction getEmployees(list) {\n  return [...list].map((person) => ({\n    name: person.innerText,\n    position: person.getAttribute('data-position'),\n    salary: person.getAttribute('data-salary'),\n    age: person.getAttribute('data-age'),\n  }));\n};\n"]}